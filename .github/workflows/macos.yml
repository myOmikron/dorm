name: Build & Test for MacOS
on:
  push:
    paths-ignore:
      - "*.md"
      - docs
  pull_request:

jobs:
  build-macos-shared:
    name: Build rorm from scratch
    runs-on: macos-latest
    env:
      RUSTFLAGS: "-Cinstrument-coverage"
      LLVM_PROFILE_FILE: "coverage-rorm_%p-%m.profraw"
    steps:
      - uses: actions/checkout@v3

      - name: Update rust
        run: rustup update

      - name: Install rorm-cli (release)
        run: |
          rustup component add clippy
          cargo install clippy-sarif sarif-fmt
          cargo install rorm-cli --path ./rorm/rorm-cli -f

      - name: Build and test
        run: |
          set -x
          cargo build -p rorm-lib
          cargo test -p rorm-cli
          cargo test -p rorm-db -F tokio-rustls
          cargo test -p rorm-declaration
          cargo test -p rorm-lib
          cargo test -p rorm-macro
          cargo test -p rorm-sql -F sqlite
          cargo test -p rorm-sql -F mysql
          cargo test -p rorm-sql -F postgres
          cargo test -F tokio-rustls
        working-directory: ./rorm

      - name: Execute rorm-sample with SQLite
        env:
          CONFIG_FILE: "sqlite.toml"
        run: |
          set -x
          RUST_BACKTRACE=full cargo run -- --help
          echo Config: ${CONFIG_FILE}
          rm -rvf .models.json
          rorm-cli migrate --database-config "${CONFIG_FILE}" --log-sql
          cargo run -F rorm-main
          rorm-cli make-migrations
          rorm-cli migrate --database-config "${CONFIG_FILE}" --log-sql
          RUST_BACKTRACE=full RUST_LOG=rorm=debug cargo run -- "${CONFIG_FILE}"
        working-directory: ./rorm/rorm-sample
