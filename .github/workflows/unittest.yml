name: Run Unittests
on:
  push:
    paths:
    - dorm
    - rorm
    - .github/workflows
    paths-ignore:
    - "*.md"
  pull_request:

jobs:
  build-release:
    name: Build rorm-lib (release)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Build rorm-lib (release)
        run: cargo build -p rorm-lib -r
        working-directory: ./rorm

      - name: Package artifact
        if: ${{ matrix.os == "windows-latest" }}
        run: 7z a -m0=Copy rorm-lib-release-${{matrix.os}}.7z rorm/target/release

      - name: Package artifact
        if: ${{ matrix.os != "windows-latest" }}
        run: tar cf rorm-lib-release-${{matrix.os}}.tar rorm/target/release

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os == "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.7z

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os != "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.tar

  build-debug:
    name: Build rorm-lib (debug)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Build rorm-lib (debug)
        run: cargo build -p rorm-lib
        working-directory: ./rorm

      - name: Package artifact
        if: ${{ matrix.os == "windows-latest" }}
        run: 7z a -m0=Copy rorm-lib-debug-${{matrix.os}}.7z rorm/target/debug

      - name: Package artifact
        if: ${{ matrix.os != "windows-latest" }}
        run: tar cf rorm-lib-debug-${{matrix.os}}.tar rorm/target/debug

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os == "windows-latest" }}
        with:
          name: rorm-lib-debug-${{matrix.os}}
          path: rorm-lib-debug-${{matrix.os}}.7z

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os != "windows-latest" }}
        with:
          name: rorm-lib-debug-${{matrix.os}}
          path: rorm-lib-debug-${{matrix.os}}.tar

  dubtest:
    name: Dub Tests
    needs: build-release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dc: [dmd-latest, ldc-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        if: ${{ matrix.os == "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.7z
      - uses: actions/download-artifact@v3
        if: ${{ matrix.os != "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.tar

      - name: Extract artifact
        if: ${{ matrix.os == "windows-latest" }}
        run: 7z x rorm-lib-release-${{matrix.os}}.7z

      - name: Extract artifact
        if: ${{ matrix.os != "windows-latest" }}
        run: tar xvf rorm-lib-release-${{matrix.os}}.tar

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Run tests
        run: dub test
        working-directory: ./dorm

  cargotest:
    name: Cargo Tests
    needs: build-debug
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        if: ${{ matrix.os == "windows-latest" }}
        with:
          name: rorm-lib-debug-${{matrix.os}}
          path: rorm-lib-debug-${{matrix.os}}.7z
      - uses: actions/download-artifact@v3
        if: ${{ matrix.os != "windows-latest" }}
        with:
          name: rorm-lib-debug-${{matrix.os}}
          path: rorm-lib-debug-${{matrix.os}}.tar

      - name: Extract artifact
        if: ${{ matrix.os == "windows-latest" }}
        run: 7z x rorm-lib-debug-${{matrix.os}}.7z

      - name: Extract artifact
        if: ${{ matrix.os != "windows-latest" }}
        run: tar xvf rorm-lib-debug-${{matrix.os}}.tar

      - name: Run CLI tests
        run: cargo test -p rorm-cli
        working-directory: ./rorm

      - name: Run DB tests
        run: cargo test -p rorm-db -F tokio-rustls
        working-directory: ./rorm

      - name: Run declaration tests
        run: cargo test -p rorm-declaration
        working-directory: ./rorm

      - name: Run lib test
        run: cargo test -p rorm-lib
        working-directory: ./rorm

      - name: Run macro test
        run: cargo test -p rorm-macro
        working-directory: ./rorm

      - name: Run sql tests
        run: cargo test -p rorm-sql -F sqlite
        working-directory: ./rorm

      - name: Run root test
        run: cargo test -F tokio-rustls
        working-directory: ./rorm

  integration:
    name: Integration Tests
    needs: [dubtest, cargotest]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dc: [ldc-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        if: ${{ matrix.os == "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.7z
      - uses: actions/download-artifact@v3
        if: ${{ matrix.os != "windows-latest" }}
        with:
          name: rorm-lib-release-${{matrix.os}}
          path: rorm-lib-release-${{matrix.os}}.tar

      - name: Extract artifact
        if: ${{ matrix.os == "windows-latest" }}
        run: 7z x rorm-lib-release-${{matrix.os}}.7z

      - name: Extract artifact
        if: ${{ matrix.os != "windows-latest" }}
        run: tar xvf rorm-lib-release-${{matrix.os}}.tar

      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Run integration tests
        run: ./run.sh
        working-directory: ./dorm/integration-tests/
